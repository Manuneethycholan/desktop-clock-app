{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{WALLPAPER_CATEGORIES,ROTATION_INTERVALS,CSS_CLASSES,FONT_COLORS,FONT_FAMILIES}from'../utils/constants';import{getCategoryDisplayName}from'../utils/imageLoader';import'../styles/Settings.css';/**\n * Settings component with dropdown sections for Digital Clock and Wallpaper settings\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Settings=_ref=>{let{isVisible,onSettingsChange,currentSettings,onClose}=_ref;const[digitalClockExpanded,setDigitalClockExpanded]=useState(false);const[wallpaperExpanded,setWallpaperExpanded]=useState(false);const autoCloseTimeoutRef=useRef(null);const settingsPanelRef=useRef(null);// Auto-close after 7 seconds of inactivity\nuseEffect(()=>{if(!isVisible)return;const resetAutoCloseTimer=()=>{if(autoCloseTimeoutRef.current){clearTimeout(autoCloseTimeoutRef.current);}autoCloseTimeoutRef.current=setTimeout(()=>{if(onClose){onClose();}},7000);// 7 seconds\n};// Start the timer when panel opens\nresetAutoCloseTimer();// Reset timer on any interaction within the settings panel\nconst handleInteraction=()=>{resetAutoCloseTimer();};const panelElement=settingsPanelRef.current;if(panelElement){panelElement.addEventListener('mouseenter',handleInteraction);panelElement.addEventListener('mousemove',handleInteraction);panelElement.addEventListener('click',handleInteraction);panelElement.addEventListener('scroll',handleInteraction);}// Cleanup\nreturn()=>{if(autoCloseTimeoutRef.current){clearTimeout(autoCloseTimeoutRef.current);}if(panelElement){panelElement.removeEventListener('mouseenter',handleInteraction);panelElement.removeEventListener('mousemove',handleInteraction);panelElement.removeEventListener('click',handleInteraction);panelElement.removeEventListener('scroll',handleInteraction);}};},[isVisible,onClose]);// Handle wallpaper enable/disable toggle\nconst handleWallpaperToggle=enabled=>{onSettingsChange({wallpaperEnabled:enabled});};// Handle category selection with edge case handling\nconst handleCategoryToggle=(category,selected)=>{let updatedCategories;if(selected){// Add category if not already present\nupdatedCategories=currentSettings.selectedCategories.includes(category)?currentSettings.selectedCategories:[...currentSettings.selectedCategories,category];}else{// Remove category\nupdatedCategories=currentSettings.selectedCategories.filter(cat=>cat!==category);}onSettingsChange({selectedCategories:updatedCategories});};// Check if no categories are selected\nconst hasNoCategories=currentSettings.selectedCategories.length===0;// Handle rotation interval change\nconst handleRotationIntervalChange=interval=>{onSettingsChange({rotationInterval:interval});};// Handle time format change\nconst handleTimeFormatChange=format=>{onSettingsChange({timeFormat:format});};// Handle font color change\nconst handleFontColorChange=color=>{onSettingsChange({fontColor:color});};// Handle font family change\nconst handleFontFamilyChange=family=>{onSettingsChange({fontFamily:family});};if(!isVisible){return null;}return/*#__PURE__*/_jsx(\"div\",{ref:settingsPanelRef,className:\"\".concat(CSS_CLASSES.SETTINGS_PANEL,\" \").concat(CSS_CLASSES.SETTINGS_VISIBLE),children:/*#__PURE__*/_jsxs(\"div\",{className:\"settings-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"settings-header\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"settings-title\",children:\"Settings\"}),/*#__PURE__*/_jsx(\"button\",{className:\"settings-close-button\",onClick:onClose,\"aria-label\":\"Close Settings\",children:\"\\u2715\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"settings-section-title\",children:\"Display Mode\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-radio-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"settings-radio\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"displayMode\",value:\"digital-clock\",checked:currentSettings.displayMode==='digital-clock',onChange:()=>onSettingsChange({displayMode:'digital-clock'})}),/*#__PURE__*/_jsx(\"span\",{className:\"settings-radio-label\",children:\"Digital Clock\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"settings-radio\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"displayMode\",value:\"wallpaper\",checked:currentSettings.displayMode==='wallpaper',onChange:()=>onSettingsChange({displayMode:'wallpaper'})}),/*#__PURE__*/_jsx(\"span\",{className:\"settings-radio-label\",children:\"Wallpaper\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"settings-radio\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"displayMode\",value:\"focus-mode\",checked:currentSettings.displayMode==='focus-mode',onChange:()=>onSettingsChange({displayMode:'focus-mode'})}),/*#__PURE__*/_jsx(\"span\",{className:\"settings-radio-label\",children:\"Focus Mode\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-dropdown\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"settings-dropdown-header \".concat(digitalClockExpanded?'expanded':''),onClick:()=>setDigitalClockExpanded(!digitalClockExpanded),children:[/*#__PURE__*/_jsx(\"span\",{children:\"Digital Clock Settings\"}),/*#__PURE__*/_jsx(\"span\",{className:\"dropdown-arrow\",children:digitalClockExpanded?'▼':'▶'})]}),digitalClockExpanded&&/*#__PURE__*/_jsxs(\"div\",{className:\"settings-dropdown-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"settings-subsection\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"settings-subsection-title\",children:\"Time Format\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-radio-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"settings-radio\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"timeFormat\",value:\"12h\",checked:currentSettings.timeFormat==='12h',onChange:()=>handleTimeFormatChange('12h')}),/*#__PURE__*/_jsx(\"span\",{className:\"settings-radio-label\",children:\"12 Hour\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"settings-radio\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"timeFormat\",value:\"24h\",checked:currentSettings.timeFormat==='24h',onChange:()=>handleTimeFormatChange('24h')}),/*#__PURE__*/_jsx(\"span\",{className:\"settings-radio-label\",children:\"24 Hour\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-subsection\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"settings-subsection-title\",children:\"Font Color\"}),/*#__PURE__*/_jsx(\"div\",{className:\"settings-color-grid\",children:FONT_COLORS.map(color=>/*#__PURE__*/_jsxs(\"label\",{className:\"settings-color-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"fontColor\",value:color.value,checked:currentSettings.fontColor===color.value,onChange:()=>handleFontColorChange(color.value)}),/*#__PURE__*/_jsx(\"span\",{className:\"settings-color-swatch\",style:{backgroundColor:color.value},title:color.name}),/*#__PURE__*/_jsx(\"span\",{className:\"settings-color-name\",children:color.name})]},color.value))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-subsection\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"settings-subsection-title\",children:\"Font Type\"}),/*#__PURE__*/_jsx(\"select\",{className:\"settings-select\",value:currentSettings.fontFamily,onChange:e=>handleFontFamilyChange(e.target.value),children:FONT_FAMILIES.map(font=>/*#__PURE__*/_jsx(\"option\",{value:font.value,children:font.name},font.value))})]})]})]}),currentSettings.displayMode==='wallpaper'&&/*#__PURE__*/_jsxs(\"div\",{className:\"settings-dropdown\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"settings-dropdown-header \".concat(wallpaperExpanded?'expanded':''),onClick:()=>setWallpaperExpanded(!wallpaperExpanded),children:[/*#__PURE__*/_jsx(\"span\",{children:\"Wallpaper Settings\"}),/*#__PURE__*/_jsx(\"span\",{className:\"dropdown-arrow\",children:wallpaperExpanded?'▼':'▶'})]}),wallpaperExpanded&&/*#__PURE__*/_jsxs(\"div\",{className:\"settings-dropdown-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"settings-subsection\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"settings-subsection-title\",children:\"Rotation Speed\"}),/*#__PURE__*/_jsx(\"select\",{className:\"settings-select\",value:currentSettings.rotationInterval,onChange:e=>handleRotationIntervalChange(Number(e.target.value)),children:ROTATION_INTERVALS.map(interval=>/*#__PURE__*/_jsx(\"option\",{value:interval.value,children:interval.label},interval.value))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-subsection\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"settings-subsection-title\",children:\"Wallpaper Categories\"}),/*#__PURE__*/_jsx(\"div\",{className:\"settings-category-grid\",children:WALLPAPER_CATEGORIES.map(category=>{const isSelected=currentSettings.selectedCategories.includes(category.name);const hasImages=category.imageCount>0;const categoryClass=\"settings-category \".concat(isSelected?'category-selected':'category-unselected',\" \").concat(!hasImages?'category-empty':'');return/*#__PURE__*/_jsxs(\"label\",{className:categoryClass,children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:isSelected,onChange:e=>handleCategoryToggle(category.name,e.target.checked),\"aria-label\":\"Toggle \".concat(getCategoryDisplayName(category.name),\" wallpapers\").concat(!hasImages?' (no images available)':''),disabled:!hasImages}),/*#__PURE__*/_jsxs(\"span\",{className:\"settings-category-label\",children:[getCategoryDisplayName(category.name),hasImages&&category.imageCount>0&&/*#__PURE__*/_jsxs(\"span\",{className:\"settings-category-count\",children:[\"(\",category.imageCount,\")\"]}),!hasImages&&/*#__PURE__*/_jsx(\"span\",{className:\"settings-category-empty-indicator\",children:\"(empty)\"})]})]},category.name);})}),hasNoCategories&&/*#__PURE__*/_jsx(\"div\",{className:\"settings-category-warning\",children:\"No categories selected. A black background will be displayed.\"}),currentSettings.selectedCategories.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"settings-category-info\",children:[currentSettings.selectedCategories.length,\" categor\",currentSettings.selectedCategories.length===1?'y':'ies',\" selected\"]})]})]})]})]})});};export default Settings;","map":{"version":3,"names":["React","useState","useEffect","useRef","WALLPAPER_CATEGORIES","ROTATION_INTERVALS","CSS_CLASSES","FONT_COLORS","FONT_FAMILIES","getCategoryDisplayName","jsx","_jsx","jsxs","_jsxs","Settings","_ref","isVisible","onSettingsChange","currentSettings","onClose","digitalClockExpanded","setDigitalClockExpanded","wallpaperExpanded","setWallpaperExpanded","autoCloseTimeoutRef","settingsPanelRef","resetAutoCloseTimer","current","clearTimeout","setTimeout","handleInteraction","panelElement","addEventListener","removeEventListener","handleWallpaperToggle","enabled","wallpaperEnabled","handleCategoryToggle","category","selected","updatedCategories","selectedCategories","includes","filter","cat","hasNoCategories","length","handleRotationIntervalChange","interval","rotationInterval","handleTimeFormatChange","format","timeFormat","handleFontColorChange","color","fontColor","handleFontFamilyChange","family","fontFamily","ref","className","concat","SETTINGS_PANEL","SETTINGS_VISIBLE","children","onClick","type","name","value","checked","displayMode","onChange","map","style","backgroundColor","title","e","target","font","Number","label","isSelected","hasImages","imageCount","categoryClass","disabled"],"sources":["/Users/chmanune/Project/Github_wall_paper_project/desktop-clock-app/src/components/Settings.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { SettingsProps, TimeFormat, FontColor, FontFamily } from '../types';\nimport { WALLPAPER_CATEGORIES, ROTATION_INTERVALS, CSS_CLASSES, FONT_COLORS, FONT_FAMILIES } from '../utils/constants';\nimport { getCategoryDisplayName } from '../utils/imageLoader';\nimport '../styles/Settings.css';\n\n/**\n * Settings component with dropdown sections for Digital Clock and Wallpaper settings\n */\nconst Settings: React.FC<SettingsProps> = ({\n  isVisible,\n  onSettingsChange,\n  currentSettings,\n  onClose\n}) => {\n  const [digitalClockExpanded, setDigitalClockExpanded] = useState(false);\n  const [wallpaperExpanded, setWallpaperExpanded] = useState(false);\n  const autoCloseTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const settingsPanelRef = useRef<HTMLDivElement>(null);\n\n  // Auto-close after 7 seconds of inactivity\n  useEffect(() => {\n    if (!isVisible) return;\n\n    const resetAutoCloseTimer = () => {\n      if (autoCloseTimeoutRef.current) {\n        clearTimeout(autoCloseTimeoutRef.current);\n      }\n\n      autoCloseTimeoutRef.current = setTimeout(() => {\n        if (onClose) {\n          onClose();\n        }\n      }, 7000); // 7 seconds\n    };\n\n    // Start the timer when panel opens\n    resetAutoCloseTimer();\n\n    // Reset timer on any interaction within the settings panel\n    const handleInteraction = () => {\n      resetAutoCloseTimer();\n    };\n\n    const panelElement = settingsPanelRef.current;\n    if (panelElement) {\n      panelElement.addEventListener('mouseenter', handleInteraction);\n      panelElement.addEventListener('mousemove', handleInteraction);\n      panelElement.addEventListener('click', handleInteraction);\n      panelElement.addEventListener('scroll', handleInteraction);\n    }\n\n    // Cleanup\n    return () => {\n      if (autoCloseTimeoutRef.current) {\n        clearTimeout(autoCloseTimeoutRef.current);\n      }\n      if (panelElement) {\n        panelElement.removeEventListener('mouseenter', handleInteraction);\n        panelElement.removeEventListener('mousemove', handleInteraction);\n        panelElement.removeEventListener('click', handleInteraction);\n        panelElement.removeEventListener('scroll', handleInteraction);\n      }\n    };\n  }, [isVisible, onClose]);\n\n  // Handle wallpaper enable/disable toggle\n  const handleWallpaperToggle = (enabled: boolean) => {\n    onSettingsChange({ wallpaperEnabled: enabled });\n  };\n\n  // Handle category selection with edge case handling\n  const handleCategoryToggle = (category: string, selected: boolean) => {\n    let updatedCategories: string[];\n\n    if (selected) {\n      // Add category if not already present\n      updatedCategories = currentSettings.selectedCategories.includes(category)\n        ? currentSettings.selectedCategories\n        : [...currentSettings.selectedCategories, category];\n    } else {\n      // Remove category\n      updatedCategories = currentSettings.selectedCategories.filter(cat => cat !== category);\n    }\n\n    onSettingsChange({ selectedCategories: updatedCategories });\n  };\n\n  // Check if no categories are selected\n  const hasNoCategories = currentSettings.selectedCategories.length === 0;\n\n\n\n  // Handle rotation interval change\n  const handleRotationIntervalChange = (interval: number) => {\n    onSettingsChange({ rotationInterval: interval });\n  };\n\n  // Handle time format change\n  const handleTimeFormatChange = (format: TimeFormat) => {\n    onSettingsChange({ timeFormat: format });\n  };\n\n  // Handle font color change\n  const handleFontColorChange = (color: FontColor) => {\n    onSettingsChange({ fontColor: color });\n  };\n\n  // Handle font family change\n  const handleFontFamilyChange = (family: FontFamily) => {\n    onSettingsChange({ fontFamily: family });\n  };\n\n  if (!isVisible) {\n    return null;\n  }\n\n  return (\n    <div\n      ref={settingsPanelRef}\n      className={`${CSS_CLASSES.SETTINGS_PANEL} ${CSS_CLASSES.SETTINGS_VISIBLE}`}\n    >\n      <div className=\"settings-content\">\n        <div className=\"settings-header\">\n          <h2 className=\"settings-title\">Settings</h2>\n          <button\n            className=\"settings-close-button\"\n            onClick={onClose}\n            aria-label=\"Close Settings\"\n          >\n            ✕\n          </button>\n        </div>\n\n        {/* Display Mode Controls */}\n        <div className=\"settings-section\">\n          <h3 className=\"settings-section-title\">Display Mode</h3>\n\n          <div className=\"settings-radio-group\">\n            <label className=\"settings-radio\">\n              <input\n                type=\"radio\"\n                name=\"displayMode\"\n                value=\"digital-clock\"\n                checked={currentSettings.displayMode === 'digital-clock'}\n                onChange={() => onSettingsChange({ displayMode: 'digital-clock' })}\n              />\n              <span className=\"settings-radio-label\">Digital Clock</span>\n            </label>\n\n            <label className=\"settings-radio\">\n              <input\n                type=\"radio\"\n                name=\"displayMode\"\n                value=\"wallpaper\"\n                checked={currentSettings.displayMode === 'wallpaper'}\n                onChange={() => onSettingsChange({ displayMode: 'wallpaper' })}\n              />\n              <span className=\"settings-radio-label\">Wallpaper</span>\n            </label>\n\n            <label className=\"settings-radio\">\n              <input\n                type=\"radio\"\n                name=\"displayMode\"\n                value=\"focus-mode\"\n                checked={currentSettings.displayMode === 'focus-mode'}\n                onChange={() => onSettingsChange({ displayMode: 'focus-mode' })}\n              />\n              <span className=\"settings-radio-label\">Focus Mode</span>\n            </label>\n          </div>\n        </div>\n\n        {/* Digital Clock Settings Dropdown */}\n        <div className=\"settings-dropdown\">\n          <button\n            className={`settings-dropdown-header ${digitalClockExpanded ? 'expanded' : ''}`}\n            onClick={() => setDigitalClockExpanded(!digitalClockExpanded)}\n          >\n            <span>Digital Clock Settings</span>\n            <span className=\"dropdown-arrow\">{digitalClockExpanded ? '▼' : '▶'}</span>\n          </button>\n\n          {digitalClockExpanded && (\n            <div className=\"settings-dropdown-content\">\n              {/* Time Format */}\n              <div className=\"settings-subsection\">\n                <h4 className=\"settings-subsection-title\">Time Format</h4>\n                <div className=\"settings-radio-group\">\n                  <label className=\"settings-radio\">\n                    <input\n                      type=\"radio\"\n                      name=\"timeFormat\"\n                      value=\"12h\"\n                      checked={currentSettings.timeFormat === '12h'}\n                      onChange={() => handleTimeFormatChange('12h')}\n                    />\n                    <span className=\"settings-radio-label\">12 Hour</span>\n                  </label>\n\n                  <label className=\"settings-radio\">\n                    <input\n                      type=\"radio\"\n                      name=\"timeFormat\"\n                      value=\"24h\"\n                      checked={currentSettings.timeFormat === '24h'}\n                      onChange={() => handleTimeFormatChange('24h')}\n                    />\n                    <span className=\"settings-radio-label\">24 Hour</span>\n                  </label>\n                </div>\n              </div>\n\n              {/* Font Color */}\n              <div className=\"settings-subsection\">\n                <h4 className=\"settings-subsection-title\">Font Color</h4>\n                <div className=\"settings-color-grid\">\n                  {FONT_COLORS.map(color => (\n                    <label key={color.value} className=\"settings-color-option\">\n                      <input\n                        type=\"radio\"\n                        name=\"fontColor\"\n                        value={color.value}\n                        checked={currentSettings.fontColor === color.value}\n                        onChange={() => handleFontColorChange(color.value)}\n                      />\n                      <span\n                        className=\"settings-color-swatch\"\n                        style={{ backgroundColor: color.value }}\n                        title={color.name}\n                      />\n                      <span className=\"settings-color-name\">{color.name}</span>\n                    </label>\n                  ))}\n                </div>\n              </div>\n\n              {/* Font Family */}\n              <div className=\"settings-subsection\">\n                <h4 className=\"settings-subsection-title\">Font Type</h4>\n                <select\n                  className=\"settings-select\"\n                  value={currentSettings.fontFamily}\n                  onChange={(e) => handleFontFamilyChange(e.target.value)}\n                >\n                  {FONT_FAMILIES.map(font => (\n                    <option key={font.value} value={font.value}>\n                      {font.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Wallpaper Settings Dropdown */}\n        {currentSettings.displayMode === 'wallpaper' && (\n          <div className=\"settings-dropdown\">\n            <button\n              className={`settings-dropdown-header ${wallpaperExpanded ? 'expanded' : ''}`}\n              onClick={() => setWallpaperExpanded(!wallpaperExpanded)}\n            >\n              <span>Wallpaper Settings</span>\n              <span className=\"dropdown-arrow\">{wallpaperExpanded ? '▼' : '▶'}</span>\n            </button>\n\n            {wallpaperExpanded && (\n              <div className=\"settings-dropdown-content\">\n\n\n                {/* Rotation Speed */}\n                <div className=\"settings-subsection\">\n                  <h4 className=\"settings-subsection-title\">Rotation Speed</h4>\n                  <select\n                    className=\"settings-select\"\n                    value={currentSettings.rotationInterval}\n                    onChange={(e) => handleRotationIntervalChange(Number(e.target.value))}\n                  >\n                    {ROTATION_INTERVALS.map(interval => (\n                      <option key={interval.value} value={interval.value}>\n                        {interval.label}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                {/* Category Selection */}\n                <div className=\"settings-subsection\">\n                  <h4 className=\"settings-subsection-title\">Wallpaper Categories</h4>\n\n                  <div className=\"settings-category-grid\">\n                    {WALLPAPER_CATEGORIES.map(category => {\n                      const isSelected = currentSettings.selectedCategories.includes(category.name);\n                      const hasImages = category.imageCount > 0;\n                      const categoryClass = `settings-category ${isSelected ? 'category-selected' : 'category-unselected'\n                        } ${!hasImages ? 'category-empty' : ''}`;\n\n                      return (\n                        <label key={category.name} className={categoryClass}>\n                          <input\n                            type=\"checkbox\"\n                            checked={isSelected}\n                            onChange={(e) => handleCategoryToggle(category.name, e.target.checked)}\n                            aria-label={`Toggle ${getCategoryDisplayName(category.name)} wallpapers${!hasImages ? ' (no images available)' : ''}`}\n                            disabled={!hasImages}\n                          />\n                          <span className=\"settings-category-label\">\n                            {getCategoryDisplayName(category.name)}\n                            {hasImages && category.imageCount > 0 && (\n                              <span className=\"settings-category-count\">\n                                ({category.imageCount})\n                              </span>\n                            )}\n                            {!hasImages && (\n                              <span className=\"settings-category-empty-indicator\">\n                                (empty)\n                              </span>\n                            )}\n                          </span>\n                        </label>\n                      );\n                    })}\n                  </div>\n\n                  {/* Warning when no categories are selected */}\n                  {hasNoCategories && (\n                    <div className=\"settings-category-warning\">\n                      No categories selected. A black background will be displayed.\n                    </div>\n                  )}\n\n                  {/* Info about selected categories */}\n                  {currentSettings.selectedCategories.length > 0 && (\n                    <div className=\"settings-category-info\">\n                      {currentSettings.selectedCategories.length} categor{currentSettings.selectedCategories.length === 1 ? 'y' : 'ies'} selected\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}