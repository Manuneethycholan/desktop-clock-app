{"ast":null,"code":"import React from'react';import{useWallpaperRotation}from'../hooks/useWallpaperRotation';import{CSS_CLASSES}from'../utils/constants';import'../styles/Wallpaper.css';/**\n * Wallpaper component that displays rotating background images\n * with CSS-based scaling (small/medium/large)\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Wallpaper=_ref=>{let{categories,rotationInterval,wallpaperSize,enabled}=_ref;const{currentImage,isLoading,error,scaleValue,hasImages}=useWallpaperRotation(categories,rotationInterval,wallpaperSize,enabled);// Don't render anything if wallpapers are disabled\nif(!enabled){return null;}// Show loading state\nif(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(CSS_CLASSES.WALLPAPER_CONTAINER,\" wallpaper-loading\"),children:/*#__PURE__*/_jsx(\"div\",{className:\"wallpaper-loading-text\",children:\"Loading wallpapers...\"})});}// Show error state with fallback background\nif(error){return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(CSS_CLASSES.WALLPAPER_CONTAINER,\" wallpaper-error\"),children:/*#__PURE__*/_jsx(\"div\",{className:\"wallpaper-error-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"wallpaper-error-text\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Wallpaper Error\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"small\",{children:\"Using default background\"})]})})});}// Show empty state when no images are available\nif(!hasImages||!currentImage){return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(CSS_CLASSES.WALLPAPER_CONTAINER,\" wallpaper-empty\"),children:/*#__PURE__*/_jsx(\"div\",{className:\"wallpaper-empty-overlay\",children:/*#__PURE__*/_jsx(\"div\",{className:\"wallpaper-empty-text\",children:categories.length===0?\"No wallpaper categories selected\":\"No images found in selected categories\"})})});}// Render wallpaper with current image and error handling\nreturn/*#__PURE__*/_jsxs(\"div\",{className:CSS_CLASSES.WALLPAPER_CONTAINER,children:[/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(CSS_CLASSES.WALLPAPER_IMAGE,\" wallpaper-size-\").concat(wallpaperSize),style:{backgroundImage:\"url(\".concat(currentImage.src,\")\"),transform:\"scale(\".concat(scaleValue,\")\")},\"aria-label\":\"Wallpaper from \".concat(currentImage.category,\" category\"),onError:e=>{console.error('Wallpaper image failed to load:',currentImage.src);// Set fallback background\nconst target=e.target;target.style.backgroundImage='none';target.style.backgroundColor='#1a1a1a';}}),/*#__PURE__*/_jsx(\"div\",{className:\"wallpaper-image-fallback\",style:{backgroundImage:\"url(\".concat(currentImage.src,\")\"),transform:\"scale(\".concat(scaleValue,\")\")},onError:e=>{const target=e.target;target.style.display='none';}})]});};export default Wallpaper;","map":{"version":3,"names":["React","useWallpaperRotation","CSS_CLASSES","jsx","_jsx","jsxs","_jsxs","Wallpaper","_ref","categories","rotationInterval","wallpaperSize","enabled","currentImage","isLoading","error","scaleValue","hasImages","className","concat","WALLPAPER_CONTAINER","children","length","WALLPAPER_IMAGE","style","backgroundImage","src","transform","category","onError","e","console","target","backgroundColor","display"],"sources":["/Users/chmanune/Project/Github_wall_paper_project/desktop-clock-app/src/components/Wallpaper.tsx"],"sourcesContent":["import React from 'react';\nimport { WallpaperProps } from '../types';\nimport { useWallpaperRotation } from '../hooks/useWallpaperRotation';\nimport { CSS_CLASSES } from '../utils/constants';\nimport '../styles/Wallpaper.css';\n\n/**\n * Wallpaper component that displays rotating background images\n * with CSS-based scaling (small/medium/large)\n */\nconst Wallpaper: React.FC<WallpaperProps> = ({\n  categories,\n  rotationInterval,\n  wallpaperSize,\n  enabled\n}) => {\n  const {\n    currentImage,\n    isLoading,\n    error,\n    scaleValue,\n    hasImages\n  } = useWallpaperRotation(categories, rotationInterval, wallpaperSize, enabled);\n\n  // Don't render anything if wallpapers are disabled\n  if (!enabled) {\n    return null;\n  }\n\n  // Show loading state\n  if (isLoading) {\n    return (\n      <div className={`${CSS_CLASSES.WALLPAPER_CONTAINER} wallpaper-loading`}>\n        <div className=\"wallpaper-loading-text\">Loading wallpapers...</div>\n      </div>\n    );\n  }\n\n  // Show error state with fallback background\n  if (error) {\n    return (\n      <div className={`${CSS_CLASSES.WALLPAPER_CONTAINER} wallpaper-error`}>\n        <div className=\"wallpaper-error-overlay\">\n          <div className=\"wallpaper-error-text\">\n            <h3>Wallpaper Error</h3>\n            <p>{error}</p>\n            <small>Using default background</small>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show empty state when no images are available\n  if (!hasImages || !currentImage) {\n    return (\n      <div className={`${CSS_CLASSES.WALLPAPER_CONTAINER} wallpaper-empty`}>\n        {/* Black background when no wallpapers are selected */}\n        <div className=\"wallpaper-empty-overlay\">\n          <div className=\"wallpaper-empty-text\">\n            {categories.length === 0 \n              ? \"No wallpaper categories selected\" \n              : \"No images found in selected categories\"\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Render wallpaper with current image and error handling\n  return (\n    <div className={CSS_CLASSES.WALLPAPER_CONTAINER}>\n      <div\n        className={`${CSS_CLASSES.WALLPAPER_IMAGE} wallpaper-size-${wallpaperSize}`}\n        style={{\n          backgroundImage: `url(${currentImage.src})`,\n          transform: `scale(${scaleValue})`,\n        }}\n        aria-label={`Wallpaper from ${currentImage.category} category`}\n        onError={(e) => {\n          console.error('Wallpaper image failed to load:', currentImage.src);\n          // Set fallback background\n          const target = e.target as HTMLElement;\n          target.style.backgroundImage = 'none';\n          target.style.backgroundColor = '#1a1a1a';\n        }}\n      />\n      \n      {/* Fallback overlay for broken images */}\n      <div \n        className=\"wallpaper-image-fallback\"\n        style={{\n          backgroundImage: `url(${currentImage.src})`,\n          transform: `scale(${scaleValue})`,\n        }}\n        onError={(e) => {\n          const target = e.target as HTMLElement;\n          target.style.display = 'none';\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Wallpaper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}