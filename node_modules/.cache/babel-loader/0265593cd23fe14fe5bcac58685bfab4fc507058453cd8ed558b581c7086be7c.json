{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { MOUSE_ACTIVITY } from '../utils/constants';\n\n/**\n * Custom hook for detecting mouse activity and auto-hiding UI elements\n */\nexport const useMouseActivity = () => {\n  _s();\n  const [isActive, setIsActive] = useState(false);\n  const timeoutRef = useRef(null);\n  const lastActivityRef = useRef(Date.now());\n\n  // Clear existing timeout\n  const clearActivityTimeout = useCallback(() => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  }, []);\n\n  // Set timeout to hide UI after inactivity\n  const setActivityTimeout = useCallback(() => {\n    clearActivityTimeout();\n    timeoutRef.current = setTimeout(() => {\n      setIsActive(false);\n    }, MOUSE_ACTIVITY.HIDE_DELAY);\n  }, [clearActivityTimeout]);\n\n  // Handle mouse activity\n  const handleMouseActivity = useCallback(() => {\n    const now = Date.now();\n\n    // Debounce mouse events to avoid excessive updates\n    if (now - lastActivityRef.current < MOUSE_ACTIVITY.DEBOUNCE_DELAY) {\n      return;\n    }\n    lastActivityRef.current = now;\n\n    // Show settings panel\n    if (!isActive) {\n      setIsActive(true);\n    }\n\n    // Reset hide timer\n    setActivityTimeout();\n  }, [isActive, setActivityTimeout]);\n\n  // Force show settings (for manual triggers)\n  const showSettings = useCallback(() => {\n    setIsActive(true);\n    setActivityTimeout();\n  }, [setActivityTimeout]);\n\n  // Force hide settings\n  const hideSettings = useCallback(() => {\n    setIsActive(false);\n    clearActivityTimeout();\n  }, [clearActivityTimeout]);\n\n  // Set up mouse event listeners\n  useEffect(() => {\n    const events = ['mousemove', 'mouseenter', 'click'];\n    events.forEach(event => {\n      document.addEventListener(event, handleMouseActivity, {\n        passive: true\n      });\n    });\n    return () => {\n      events.forEach(event => {\n        document.removeEventListener(event, handleMouseActivity);\n      });\n      clearActivityTimeout();\n    };\n  }, [handleMouseActivity, clearActivityTimeout]);\n\n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      clearActivityTimeout();\n    };\n  }, [clearActivityTimeout]);\n  return {\n    isActive,\n    showSettings,\n    hideSettings\n  };\n};\n_s(useMouseActivity, \"TYV3/S7VtuMhRrfMkREl3St8ay8=\");","map":{"version":3,"names":["useState","useEffect","useCallback","useRef","MOUSE_ACTIVITY","useMouseActivity","_s","isActive","setIsActive","timeoutRef","lastActivityRef","Date","now","clearActivityTimeout","current","clearTimeout","setActivityTimeout","setTimeout","HIDE_DELAY","handleMouseActivity","DEBOUNCE_DELAY","showSettings","hideSettings","events","forEach","event","document","addEventListener","passive","removeEventListener"],"sources":["/Users/chmanune/Project/Github_wall_paper_project/desktop-clock-app/src/hooks/useMouseActivity.ts"],"sourcesContent":["import { useState, useEffect, useCallback, useRef } from 'react';\nimport { MOUSE_ACTIVITY } from '../utils/constants';\n\n/**\n * Custom hook for detecting mouse activity and auto-hiding UI elements\n */\nexport const useMouseActivity = () => {\n  const [isActive, setIsActive] = useState(false);\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const lastActivityRef = useRef<number>(Date.now());\n\n  // Clear existing timeout\n  const clearActivityTimeout = useCallback(() => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  }, []);\n\n  // Set timeout to hide UI after inactivity\n  const setActivityTimeout = useCallback(() => {\n    clearActivityTimeout();\n    \n    timeoutRef.current = setTimeout(() => {\n      setIsActive(false);\n    }, MOUSE_ACTIVITY.HIDE_DELAY);\n  }, [clearActivityTimeout]);\n\n  // Handle mouse activity\n  const handleMouseActivity = useCallback(() => {\n    const now = Date.now();\n    \n    // Debounce mouse events to avoid excessive updates\n    if (now - lastActivityRef.current < MOUSE_ACTIVITY.DEBOUNCE_DELAY) {\n      return;\n    }\n    \n    lastActivityRef.current = now;\n    \n    // Show settings panel\n    if (!isActive) {\n      setIsActive(true);\n    }\n    \n    // Reset hide timer\n    setActivityTimeout();\n  }, [isActive, setActivityTimeout]);\n\n  // Force show settings (for manual triggers)\n  const showSettings = useCallback(() => {\n    setIsActive(true);\n    setActivityTimeout();\n  }, [setActivityTimeout]);\n\n  // Force hide settings\n  const hideSettings = useCallback(() => {\n    setIsActive(false);\n    clearActivityTimeout();\n  }, [clearActivityTimeout]);\n\n  // Set up mouse event listeners\n  useEffect(() => {\n    const events = ['mousemove', 'mouseenter', 'click'];\n    \n    events.forEach(event => {\n      document.addEventListener(event, handleMouseActivity, { passive: true });\n    });\n\n    return () => {\n      events.forEach(event => {\n        document.removeEventListener(event, handleMouseActivity);\n      });\n      clearActivityTimeout();\n    };\n  }, [handleMouseActivity, clearActivityTimeout]);\n\n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      clearActivityTimeout();\n    };\n  }, [clearActivityTimeout]);\n\n  return {\n    isActive,\n    showSettings,\n    hideSettings,\n  };\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AAChE,SAASC,cAAc,QAAQ,oBAAoB;;AAEnD;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMS,UAAU,GAAGN,MAAM,CAAwB,IAAI,CAAC;EACtD,MAAMO,eAAe,GAAGP,MAAM,CAASQ,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;;EAElD;EACA,MAAMC,oBAAoB,GAAGX,WAAW,CAAC,MAAM;IAC7C,IAAIO,UAAU,CAACK,OAAO,EAAE;MACtBC,YAAY,CAACN,UAAU,CAACK,OAAO,CAAC;MAChCL,UAAU,CAACK,OAAO,GAAG,IAAI;IAC3B;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,kBAAkB,GAAGd,WAAW,CAAC,MAAM;IAC3CW,oBAAoB,CAAC,CAAC;IAEtBJ,UAAU,CAACK,OAAO,GAAGG,UAAU,CAAC,MAAM;MACpCT,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC,EAAEJ,cAAc,CAACc,UAAU,CAAC;EAC/B,CAAC,EAAE,CAACL,oBAAoB,CAAC,CAAC;;EAE1B;EACA,MAAMM,mBAAmB,GAAGjB,WAAW,CAAC,MAAM;IAC5C,MAAMU,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;;IAEtB;IACA,IAAIA,GAAG,GAAGF,eAAe,CAACI,OAAO,GAAGV,cAAc,CAACgB,cAAc,EAAE;MACjE;IACF;IAEAV,eAAe,CAACI,OAAO,GAAGF,GAAG;;IAE7B;IACA,IAAI,CAACL,QAAQ,EAAE;MACbC,WAAW,CAAC,IAAI,CAAC;IACnB;;IAEA;IACAQ,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACT,QAAQ,EAAES,kBAAkB,CAAC,CAAC;;EAElC;EACA,MAAMK,YAAY,GAAGnB,WAAW,CAAC,MAAM;IACrCM,WAAW,CAAC,IAAI,CAAC;IACjBQ,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACA,kBAAkB,CAAC,CAAC;;EAExB;EACA,MAAMM,YAAY,GAAGpB,WAAW,CAAC,MAAM;IACrCM,WAAW,CAAC,KAAK,CAAC;IAClBK,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACA,oBAAoB,CAAC,CAAC;;EAE1B;EACAZ,SAAS,CAAC,MAAM;IACd,MAAMsB,MAAM,GAAG,CAAC,WAAW,EAAE,YAAY,EAAE,OAAO,CAAC;IAEnDA,MAAM,CAACC,OAAO,CAACC,KAAK,IAAI;MACtBC,QAAQ,CAACC,gBAAgB,CAACF,KAAK,EAAEN,mBAAmB,EAAE;QAAES,OAAO,EAAE;MAAK,CAAC,CAAC;IAC1E,CAAC,CAAC;IAEF,OAAO,MAAM;MACXL,MAAM,CAACC,OAAO,CAACC,KAAK,IAAI;QACtBC,QAAQ,CAACG,mBAAmB,CAACJ,KAAK,EAAEN,mBAAmB,CAAC;MAC1D,CAAC,CAAC;MACFN,oBAAoB,CAAC,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,CAACM,mBAAmB,EAAEN,oBAAoB,CAAC,CAAC;;EAE/C;EACAZ,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXY,oBAAoB,CAAC,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,CAACA,oBAAoB,CAAC,CAAC;EAE1B,OAAO;IACLN,QAAQ;IACRc,YAAY;IACZC;EACF,CAAC;AACH,CAAC;AAAChB,EAAA,CAlFWD,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}