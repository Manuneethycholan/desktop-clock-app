{"ast":null,"code":"import React from'react';import{WALLPAPER_CATEGORIES,ROTATION_INTERVALS,CSS_CLASSES}from'../utils/constants';import{getCategoryDisplayName}from'../utils/imageLoader';import'../styles/Settings.css';/**\n * Settings component that provides user interface for configuration options\n * Appears on mouse movement and auto-hides after inactivity\n */import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Settings=_ref=>{let{isVisible,onSettingsChange,currentSettings}=_ref;// Handle clock enable/disable toggle\nconst handleClockToggle=enabled=>{onSettingsChange({clockEnabled:enabled});};// Handle wallpaper enable/disable toggle\nconst handleWallpaperToggle=enabled=>{onSettingsChange({wallpaperEnabled:enabled});};// Handle category selection\nconst handleCategoryToggle=(category,selected)=>{const updatedCategories=selected?[...currentSettings.selectedCategories,category]:currentSettings.selectedCategories.filter(cat=>cat!==category);onSettingsChange({selectedCategories:updatedCategories});};// Handle wallpaper size change\nconst handleWallpaperSizeChange=size=>{onSettingsChange({wallpaperSize:size});};// Handle rotation interval change\nconst handleRotationIntervalChange=interval=>{onSettingsChange({rotationInterval:interval});};// Handle time format change\nconst handleTimeFormatChange=format=>{onSettingsChange({timeFormat:format});};if(!isVisible){return null;}return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(CSS_CLASSES.SETTINGS_PANEL,\" \").concat(CSS_CLASSES.SETTINGS_VISIBLE),children:/*#__PURE__*/_jsxs(\"div\",{className:\"settings-content\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"settings-title\",children:\"Settings\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"settings-section-title\",children:\"Display Mode\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-toggle-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"settings-toggle\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:currentSettings.clockEnabled,onChange:e=>handleClockToggle(e.target.checked)}),/*#__PURE__*/_jsx(\"span\",{className:\"settings-toggle-label\",children:\"Show Clock\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"settings-toggle\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:currentSettings.wallpaperEnabled,onChange:e=>handleWallpaperToggle(e.target.checked)}),/*#__PURE__*/_jsx(\"span\",{className:\"settings-toggle-label\",children:\"Show Wallpapers\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"settings-section-title\",children:\"Time Format\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-radio-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"settings-radio\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"timeFormat\",value:\"12h\",checked:currentSettings.timeFormat==='12h',onChange:()=>handleTimeFormatChange('12h')}),/*#__PURE__*/_jsx(\"span\",{className:\"settings-radio-label\",children:\"12 Hour\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"settings-radio\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"timeFormat\",value:\"24h\",checked:currentSettings.timeFormat==='24h',onChange:()=>handleTimeFormatChange('24h')}),/*#__PURE__*/_jsx(\"span\",{className:\"settings-radio-label\",children:\"24 Hour\"})]})]})]}),currentSettings.wallpaperEnabled&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"settings-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"settings-section-title\",children:\"Wallpaper Size\"}),/*#__PURE__*/_jsx(\"div\",{className:\"settings-radio-group\",children:['small','medium','large'].map(size=>/*#__PURE__*/_jsxs(\"label\",{className:\"settings-radio\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"wallpaperSize\",value:size,checked:currentSettings.wallpaperSize===size,onChange:()=>handleWallpaperSizeChange(size)}),/*#__PURE__*/_jsx(\"span\",{className:\"settings-radio-label\",children:size.charAt(0).toUpperCase()+size.slice(1)})]},size))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"settings-section-title\",children:\"Rotation Speed\"}),/*#__PURE__*/_jsx(\"select\",{className:\"settings-select\",value:currentSettings.rotationInterval,onChange:e=>handleRotationIntervalChange(Number(e.target.value)),children:ROTATION_INTERVALS.map(interval=>/*#__PURE__*/_jsx(\"option\",{value:interval.value,children:interval.label},interval.value))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-section\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"settings-section-title\",children:\"Wallpaper Categories\"}),/*#__PURE__*/_jsx(\"div\",{className:\"settings-category-grid\",children:WALLPAPER_CATEGORIES.map(category=>/*#__PURE__*/_jsxs(\"label\",{className:\"settings-category\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:currentSettings.selectedCategories.includes(category.name),onChange:e=>handleCategoryToggle(category.name,e.target.checked)}),/*#__PURE__*/_jsx(\"span\",{className:\"settings-category-label\",children:getCategoryDisplayName(category.name)})]},category.name))})]})]})]})});};export default Settings;","map":{"version":3,"names":["React","WALLPAPER_CATEGORIES","ROTATION_INTERVALS","CSS_CLASSES","getCategoryDisplayName","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Settings","_ref","isVisible","onSettingsChange","currentSettings","handleClockToggle","enabled","clockEnabled","handleWallpaperToggle","wallpaperEnabled","handleCategoryToggle","category","selected","updatedCategories","selectedCategories","filter","cat","handleWallpaperSizeChange","size","wallpaperSize","handleRotationIntervalChange","interval","rotationInterval","handleTimeFormatChange","format","timeFormat","className","concat","SETTINGS_PANEL","SETTINGS_VISIBLE","children","type","checked","onChange","e","target","name","value","map","charAt","toUpperCase","slice","Number","label","includes"],"sources":["/Users/chmanune/Project/Github_wall_paper_project/desktop-clock-app/src/components/Settings.tsx"],"sourcesContent":["import React from 'react';\nimport { SettingsProps, WallpaperSize, TimeFormat } from '../types';\nimport { WALLPAPER_CATEGORIES, ROTATION_INTERVALS, CSS_CLASSES } from '../utils/constants';\nimport { getCategoryDisplayName } from '../utils/imageLoader';\nimport '../styles/Settings.css';\n\n/**\n * Settings component that provides user interface for configuration options\n * Appears on mouse movement and auto-hides after inactivity\n */\nconst Settings: React.FC<SettingsProps> = ({\n  isVisible,\n  onSettingsChange,\n  currentSettings\n}) => {\n  // Handle clock enable/disable toggle\n  const handleClockToggle = (enabled: boolean) => {\n    onSettingsChange({ clockEnabled: enabled });\n  };\n\n  // Handle wallpaper enable/disable toggle\n  const handleWallpaperToggle = (enabled: boolean) => {\n    onSettingsChange({ wallpaperEnabled: enabled });\n  };\n\n  // Handle category selection\n  const handleCategoryToggle = (category: string, selected: boolean) => {\n    const updatedCategories = selected\n      ? [...currentSettings.selectedCategories, category]\n      : currentSettings.selectedCategories.filter(cat => cat !== category);\n    \n    onSettingsChange({ selectedCategories: updatedCategories });\n  };\n\n  // Handle wallpaper size change\n  const handleWallpaperSizeChange = (size: WallpaperSize) => {\n    onSettingsChange({ wallpaperSize: size });\n  };\n\n  // Handle rotation interval change\n  const handleRotationIntervalChange = (interval: number) => {\n    onSettingsChange({ rotationInterval: interval });\n  };\n\n  // Handle time format change\n  const handleTimeFormatChange = (format: TimeFormat) => {\n    onSettingsChange({ timeFormat: format });\n  };\n\n\n\n  if (!isVisible) {\n    return null;\n  }\n\n  return (\n    <div className={`${CSS_CLASSES.SETTINGS_PANEL} ${CSS_CLASSES.SETTINGS_VISIBLE}`}>\n      <div className=\"settings-content\">\n        <h2 className=\"settings-title\">Settings</h2>\n        \n        {/* Display Mode Controls */}\n        <div className=\"settings-section\">\n          <h3 className=\"settings-section-title\">Display Mode</h3>\n          \n          <div className=\"settings-toggle-group\">\n            <label className=\"settings-toggle\">\n              <input\n                type=\"checkbox\"\n                checked={currentSettings.clockEnabled}\n                onChange={(e) => handleClockToggle(e.target.checked)}\n              />\n              <span className=\"settings-toggle-label\">Show Clock</span>\n            </label>\n            \n            <label className=\"settings-toggle\">\n              <input\n                type=\"checkbox\"\n                checked={currentSettings.wallpaperEnabled}\n                onChange={(e) => handleWallpaperToggle(e.target.checked)}\n              />\n              <span className=\"settings-toggle-label\">Show Wallpapers</span>\n            </label>\n          </div>\n        </div>\n\n        {/* Time Format */}\n        <div className=\"settings-section\">\n          <h3 className=\"settings-section-title\">Time Format</h3>\n          \n          <div className=\"settings-radio-group\">\n            <label className=\"settings-radio\">\n              <input\n                type=\"radio\"\n                name=\"timeFormat\"\n                value=\"12h\"\n                checked={currentSettings.timeFormat === '12h'}\n                onChange={() => handleTimeFormatChange('12h')}\n              />\n              <span className=\"settings-radio-label\">12 Hour</span>\n            </label>\n            \n            <label className=\"settings-radio\">\n              <input\n                type=\"radio\"\n                name=\"timeFormat\"\n                value=\"24h\"\n                checked={currentSettings.timeFormat === '24h'}\n                onChange={() => handleTimeFormatChange('24h')}\n              />\n              <span className=\"settings-radio-label\">24 Hour</span>\n            </label>\n          </div>\n        </div>\n\n        {/* Wallpaper Settings */}\n        {currentSettings.wallpaperEnabled && (\n          <>\n            {/* Wallpaper Size */}\n            <div className=\"settings-section\">\n              <h3 className=\"settings-section-title\">Wallpaper Size</h3>\n              \n              <div className=\"settings-radio-group\">\n                {(['small', 'medium', 'large'] as WallpaperSize[]).map(size => (\n                  <label key={size} className=\"settings-radio\">\n                    <input\n                      type=\"radio\"\n                      name=\"wallpaperSize\"\n                      value={size}\n                      checked={currentSettings.wallpaperSize === size}\n                      onChange={() => handleWallpaperSizeChange(size)}\n                    />\n                    <span className=\"settings-radio-label\">\n                      {size.charAt(0).toUpperCase() + size.slice(1)}\n                    </span>\n                  </label>\n                ))}\n              </div>\n            </div>\n\n            {/* Rotation Interval */}\n            <div className=\"settings-section\">\n              <h3 className=\"settings-section-title\">Rotation Speed</h3>\n              \n              <select\n                className=\"settings-select\"\n                value={currentSettings.rotationInterval}\n                onChange={(e) => handleRotationIntervalChange(Number(e.target.value))}\n              >\n                {ROTATION_INTERVALS.map(interval => (\n                  <option key={interval.value} value={interval.value}>\n                    {interval.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            {/* Category Selection */}\n            <div className=\"settings-section\">\n              <h3 className=\"settings-section-title\">Wallpaper Categories</h3>\n              \n              <div className=\"settings-category-grid\">\n                {WALLPAPER_CATEGORIES.map(category => (\n                  <label key={category.name} className=\"settings-category\">\n                    <input\n                      type=\"checkbox\"\n                      checked={currentSettings.selectedCategories.includes(category.name)}\n                      onChange={(e) => handleCategoryToggle(category.name, e.target.checked)}\n                    />\n                    <span className=\"settings-category-label\">\n                      {getCategoryDisplayName(category.name)}\n                    </span>\n                  </label>\n                ))}\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}