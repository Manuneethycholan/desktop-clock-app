{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{formatTimeForDisplay,getCurrentISTTime}from'../utils/timeUtils';import{TIME_UPDATE_INTERVAL,CSS_CLASSES}from'../utils/constants';import'../styles/Clock.css';/**\n * Clock component that displays IST time in the specified two-line format\n * Line 1: \"HH:MM\" on left, \"AM/PM SS\" on right\n * Line 2: \"Day - Month Date\"\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Clock=_ref=>{let{isFullScreen,position,timeFormat}=_ref;const[currentTime,setCurrentTime]=useState(()=>{try{return getCurrentISTTime();}catch(error){console.error('Error initializing clock time:',error);return new Date();}});const[clockDisplay,setClockDisplay]=useState(()=>{try{return formatTimeForDisplay(getCurrentISTTime(),timeFormat);}catch(error){console.error('Error initializing clock display:',error);return{timeLeft:'00:00',timeRight:'AM 00',dateBottom:'Error - Loading...'};}});const[hasError,setHasError]=useState(false);// Update time display with error handling\nconst updateTime=useCallback(()=>{try{const newTime=getCurrentISTTime();const newDisplay=formatTimeForDisplay(newTime,timeFormat);setCurrentTime(newTime);setClockDisplay(newDisplay);// Clear error state if update succeeds\nif(hasError){setHasError(false);}}catch(error){console.error('Error updating clock time:',error);setHasError(true);// Set error display\nsetClockDisplay({timeLeft:'ERROR',timeRight:'00',dateBottom:'Time Update Failed'});}},[timeFormat,hasError]);// Set up time update interval with error recovery\nuseEffect(()=>{let interval;try{interval=setInterval(updateTime,TIME_UPDATE_INTERVAL);// Update immediately on mount\nupdateTime();}catch(error){console.error('Error setting up clock interval:',error);setHasError(true);}return()=>{if(interval){clearInterval(interval);}};},[updateTime]);// Update display when time format changes\nuseEffect(()=>{try{const newDisplay=formatTimeForDisplay(currentTime,timeFormat);setClockDisplay(newDisplay);}catch(error){console.error('Error updating time format:',error);setHasError(true);}},[timeFormat,currentTime]);// Determine CSS classes based on props\nconst getClockClasses=()=>{const baseClass=CSS_CLASSES.CLOCK_CONTAINER;const positionClass=isFullScreen?CSS_CLASSES.CLOCK_FULLSCREEN:CSS_CLASSES.CLOCK_BOTTOM_LEFT;return\"\".concat(baseClass,\" \").concat(positionClass);};return/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(getClockClasses(),\" \").concat(hasError?'clock-error':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"clock-time-line\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"clock-time-left\",children:clockDisplay.timeLeft}),/*#__PURE__*/_jsx(\"span\",{className:\"clock-time-right\",children:clockDisplay.timeRight})]}),/*#__PURE__*/_jsx(\"div\",{className:\"clock-date-line\",children:/*#__PURE__*/_jsx(\"span\",{className:\"clock-date\",children:clockDisplay.dateBottom})}),hasError&&/*#__PURE__*/_jsx(\"div\",{className:\"clock-error-indicator\",title:\"Clock update error - check console\",children:\"\\u26A0\\uFE0F\"})]});};export default Clock;","map":{"version":3,"names":["React","useState","useEffect","useCallback","formatTimeForDisplay","getCurrentISTTime","TIME_UPDATE_INTERVAL","CSS_CLASSES","jsx","_jsx","jsxs","_jsxs","Clock","_ref","isFullScreen","position","timeFormat","currentTime","setCurrentTime","error","console","Date","clockDisplay","setClockDisplay","timeLeft","timeRight","dateBottom","hasError","setHasError","updateTime","newTime","newDisplay","interval","setInterval","clearInterval","getClockClasses","baseClass","CLOCK_CONTAINER","positionClass","CLOCK_FULLSCREEN","CLOCK_BOTTOM_LEFT","concat","className","children","title"],"sources":["/Users/chmanune/Project/Github_wall_paper_project/desktop-clock-app/src/components/Clock.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { ClockProps, ClockDisplay } from '../types';\nimport { formatTimeForDisplay, getCurrentISTTime } from '../utils/timeUtils';\nimport { TIME_UPDATE_INTERVAL, CSS_CLASSES } from '../utils/constants';\nimport '../styles/Clock.css';\n\n/**\n * Clock component that displays IST time in the specified two-line format\n * Line 1: \"HH:MM\" on left, \"AM/PM SS\" on right\n * Line 2: \"Day - Month Date\"\n */\nconst Clock: React.FC<ClockProps> = ({ \n  isFullScreen, \n  position, \n  timeFormat \n}) => {\n  const [currentTime, setCurrentTime] = useState<Date>(() => {\n    try {\n      return getCurrentISTTime();\n    } catch (error) {\n      console.error('Error initializing clock time:', error);\n      return new Date();\n    }\n  });\n  \n  const [clockDisplay, setClockDisplay] = useState<ClockDisplay>(() => {\n    try {\n      return formatTimeForDisplay(getCurrentISTTime(), timeFormat);\n    } catch (error) {\n      console.error('Error initializing clock display:', error);\n      return {\n        timeLeft: '00:00',\n        timeRight: 'AM 00',\n        dateBottom: 'Error - Loading...',\n      };\n    }\n  });\n\n  const [hasError, setHasError] = useState(false);\n\n  // Update time display with error handling\n  const updateTime = useCallback(() => {\n    try {\n      const newTime = getCurrentISTTime();\n      const newDisplay = formatTimeForDisplay(newTime, timeFormat);\n      \n      setCurrentTime(newTime);\n      setClockDisplay(newDisplay);\n      \n      // Clear error state if update succeeds\n      if (hasError) {\n        setHasError(false);\n      }\n    } catch (error) {\n      console.error('Error updating clock time:', error);\n      setHasError(true);\n      \n      // Set error display\n      setClockDisplay({\n        timeLeft: 'ERROR',\n        timeRight: '00',\n        dateBottom: 'Time Update Failed',\n      });\n    }\n  }, [timeFormat, hasError]);\n\n  // Set up time update interval with error recovery\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n    \n    try {\n      interval = setInterval(updateTime, TIME_UPDATE_INTERVAL);\n      \n      // Update immediately on mount\n      updateTime();\n    } catch (error) {\n      console.error('Error setting up clock interval:', error);\n      setHasError(true);\n    }\n    \n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [updateTime]);\n\n  // Update display when time format changes\n  useEffect(() => {\n    try {\n      const newDisplay = formatTimeForDisplay(currentTime, timeFormat);\n      setClockDisplay(newDisplay);\n    } catch (error) {\n      console.error('Error updating time format:', error);\n      setHasError(true);\n    }\n  }, [timeFormat, currentTime]);\n\n  // Determine CSS classes based on props\n  const getClockClasses = (): string => {\n    const baseClass = CSS_CLASSES.CLOCK_CONTAINER;\n    const positionClass = isFullScreen \n      ? CSS_CLASSES.CLOCK_FULLSCREEN \n      : CSS_CLASSES.CLOCK_BOTTOM_LEFT;\n    \n    return `${baseClass} ${positionClass}`;\n  };\n\n  return (\n    <div className={`${getClockClasses()} ${hasError ? 'clock-error' : ''}`}>\n      <div className=\"clock-time-line\">\n        <span className=\"clock-time-left\">{clockDisplay.timeLeft}</span>\n        <span className=\"clock-time-right\">{clockDisplay.timeRight}</span>\n      </div>\n      <div className=\"clock-date-line\">\n        <span className=\"clock-date\">{clockDisplay.dateBottom}</span>\n      </div>\n      {hasError && (\n        <div className=\"clock-error-indicator\" title=\"Clock update error - check console\">\n          ⚠️\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Clock;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}