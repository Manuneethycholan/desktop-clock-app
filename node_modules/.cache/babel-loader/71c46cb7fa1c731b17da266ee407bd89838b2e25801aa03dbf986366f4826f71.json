{"ast":null,"code":"var _jsxFileName = \"/Users/chmanune/Project/Github_wall_paper_project/desktop-clock-app/src/components/Settings.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { WALLPAPER_CATEGORIES, ROTATION_INTERVALS, CSS_CLASSES, FONT_COLORS, FONT_FAMILIES } from '../utils/constants';\nimport { getCategoryDisplayName } from '../utils/imageLoader';\nimport '../styles/Settings.css';\n\n/**\n * Settings component with dropdown sections for Digital Clock and Wallpaper settings\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = ({\n  isVisible,\n  onSettingsChange,\n  currentSettings\n}) => {\n  _s();\n  const [digitalClockExpanded, setDigitalClockExpanded] = useState(false);\n  const [wallpaperExpanded, setWallpaperExpanded] = useState(false);\n\n  // Handle wallpaper enable/disable toggle\n  const handleWallpaperToggle = enabled => {\n    onSettingsChange({\n      wallpaperEnabled: enabled\n    });\n  };\n\n  // Handle category selection with edge case handling\n  const handleCategoryToggle = (category, selected) => {\n    let updatedCategories;\n    if (selected) {\n      // Add category if not already present\n      updatedCategories = currentSettings.selectedCategories.includes(category) ? currentSettings.selectedCategories : [...currentSettings.selectedCategories, category];\n    } else {\n      // Remove category\n      updatedCategories = currentSettings.selectedCategories.filter(cat => cat !== category);\n    }\n    onSettingsChange({\n      selectedCategories: updatedCategories\n    });\n  };\n\n  // Check if no categories are selected\n  const hasNoCategories = currentSettings.selectedCategories.length === 0;\n\n  // Handle wallpaper size change\n  const handleWallpaperSizeChange = size => {\n    onSettingsChange({\n      wallpaperSize: size\n    });\n  };\n\n  // Handle rotation interval change\n  const handleRotationIntervalChange = interval => {\n    onSettingsChange({\n      rotationInterval: interval\n    });\n  };\n\n  // Handle time format change\n  const handleTimeFormatChange = format => {\n    onSettingsChange({\n      timeFormat: format\n    });\n  };\n\n  // Handle font color change\n  const handleFontColorChange = color => {\n    onSettingsChange({\n      fontColor: color\n    });\n  };\n\n  // Handle font family change\n  const handleFontFamilyChange = family => {\n    onSettingsChange({\n      fontFamily: family\n    });\n  };\n  if (!isVisible) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${CSS_CLASSES.SETTINGS_PANEL} ${CSS_CLASSES.SETTINGS_VISIBLE}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"settings-title\",\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"settings-close-button\",\n          onClick: () => {/* This will be handled by parent component */},\n          \"aria-label\": \"Close Settings\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"settings-section-title\",\n          children: \"Display Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-toggle-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"settings-toggle\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: currentSettings.wallpaperEnabled,\n              onChange: e => handleWallpaperToggle(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"settings-toggle-label\",\n              children: \"Show Wallpapers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `settings-dropdown-header ${digitalClockExpanded ? 'expanded' : ''}`,\n          onClick: () => setDigitalClockExpanded(!digitalClockExpanded),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Digital Clock Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dropdown-arrow\",\n            children: digitalClockExpanded ? '▼' : '▶'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), digitalClockExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-dropdown-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-subsection\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"settings-subsection-title\",\n              children: \"Time Format\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"settings-radio-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"settings-radio\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"timeFormat\",\n                  value: \"12h\",\n                  checked: currentSettings.timeFormat === '12h',\n                  onChange: () => handleTimeFormatChange('12h')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"settings-radio-label\",\n                  children: \"12 Hour\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"settings-radio\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"timeFormat\",\n                  value: \"24h\",\n                  checked: currentSettings.timeFormat === '24h',\n                  onChange: () => handleTimeFormatChange('24h')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"settings-radio-label\",\n                  children: \"24 Hour\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-subsection\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"settings-subsection-title\",\n              children: \"Font Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"settings-color-grid\",\n              children: FONT_COLORS.map(color => /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"settings-color-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"fontColor\",\n                  value: color.value,\n                  checked: currentSettings.fontColor === color.value,\n                  onChange: () => handleFontColorChange(color.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"settings-color-swatch\",\n                  style: {\n                    backgroundColor: color.value\n                  },\n                  title: color.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"settings-color-name\",\n                  children: color.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 23\n                }, this)]\n              }, color.value, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-subsection\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"settings-subsection-title\",\n              children: \"Font Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"settings-select\",\n              value: currentSettings.fontFamily,\n              onChange: e => handleFontFamilyChange(e.target.value),\n              children: FONT_FAMILIES.map(font => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: font.value,\n                children: font.name\n              }, font.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), currentSettings.wallpaperEnabled && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `settings-dropdown-header ${wallpaperExpanded ? 'expanded' : ''}`,\n          onClick: () => setWallpaperExpanded(!wallpaperExpanded),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Wallpaper Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dropdown-arrow\",\n            children: wallpaperExpanded ? '▼' : '▶'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), wallpaperExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-dropdown-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-subsection\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"settings-subsection-title\",\n              children: \"Wallpaper Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"settings-radio-group\",\n              children: ['normal', 'enlarged'].map(size => /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"settings-radio\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"wallpaperSize\",\n                  value: size,\n                  checked: currentSettings.wallpaperSize === size,\n                  onChange: () => handleWallpaperSizeChange(size)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"settings-radio-label\",\n                  children: size.charAt(0).toUpperCase() + size.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 25\n                }, this)]\n              }, size, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-subsection\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"settings-subsection-title\",\n              children: \"Rotation Speed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"settings-select\",\n              value: currentSettings.rotationInterval,\n              onChange: e => handleRotationIntervalChange(Number(e.target.value)),\n              children: ROTATION_INTERVALS.map(interval => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: interval.value,\n                children: interval.label\n              }, interval.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-subsection\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"settings-subsection-title\",\n              children: \"Wallpaper Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"settings-category-grid\",\n              children: WALLPAPER_CATEGORIES.map(category => {\n                const isSelected = currentSettings.selectedCategories.includes(category.name);\n                const hasImages = category.imageCount > 0;\n                const categoryClass = `settings-category ${isSelected ? 'category-selected' : 'category-unselected'} ${!hasImages ? 'category-empty' : ''}`;\n                return /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: categoryClass,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: isSelected,\n                    onChange: e => handleCategoryToggle(category.name, e.target.checked),\n                    \"aria-label\": `Toggle ${getCategoryDisplayName(category.name)} wallpapers${!hasImages ? ' (no images available)' : ''}`,\n                    disabled: !hasImages\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"settings-category-label\",\n                    children: [getCategoryDisplayName(category.name), hasImages && category.imageCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"settings-category-count\",\n                      children: [\"(\", category.imageCount, \")\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 31\n                    }, this), !hasImages && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"settings-category-empty-indicator\",\n                      children: \"(empty)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 27\n                  }, this)]\n                }, category.name, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), hasNoCategories && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"settings-category-warning\",\n              children: \"No categories selected. A black background will be displayed.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 21\n            }, this), currentSettings.selectedCategories.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"settings-category-info\",\n              children: [currentSettings.selectedCategories.length, \" categor\", currentSettings.selectedCategories.length === 1 ? 'y' : 'ies', \" selected\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"p+UXajtBGIsy1VzmvJKeiDLS/A8=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","WALLPAPER_CATEGORIES","ROTATION_INTERVALS","CSS_CLASSES","FONT_COLORS","FONT_FAMILIES","getCategoryDisplayName","jsxDEV","_jsxDEV","Settings","isVisible","onSettingsChange","currentSettings","_s","digitalClockExpanded","setDigitalClockExpanded","wallpaperExpanded","setWallpaperExpanded","handleWallpaperToggle","enabled","wallpaperEnabled","handleCategoryToggle","category","selected","updatedCategories","selectedCategories","includes","filter","cat","hasNoCategories","length","handleWallpaperSizeChange","size","wallpaperSize","handleRotationIntervalChange","interval","rotationInterval","handleTimeFormatChange","format","timeFormat","handleFontColorChange","color","fontColor","handleFontFamilyChange","family","fontFamily","className","SETTINGS_PANEL","SETTINGS_VISIBLE","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","checked","onChange","e","target","name","value","map","style","backgroundColor","title","font","charAt","toUpperCase","slice","Number","label","isSelected","hasImages","imageCount","categoryClass","disabled","_c","$RefreshReg$"],"sources":["/Users/chmanune/Project/Github_wall_paper_project/desktop-clock-app/src/components/Settings.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { SettingsProps, WallpaperSize, TimeFormat, FontColor, FontFamily } from '../types';\nimport { WALLPAPER_CATEGORIES, ROTATION_INTERVALS, CSS_CLASSES, FONT_COLORS, FONT_FAMILIES } from '../utils/constants';\nimport { getCategoryDisplayName } from '../utils/imageLoader';\nimport '../styles/Settings.css';\n\n/**\n * Settings component with dropdown sections for Digital Clock and Wallpaper settings\n */\nconst Settings: React.FC<SettingsProps> = ({\n  isVisible,\n  onSettingsChange,\n  currentSettings\n}) => {\n  const [digitalClockExpanded, setDigitalClockExpanded] = useState(false);\n  const [wallpaperExpanded, setWallpaperExpanded] = useState(false);\n\n  // Handle wallpaper enable/disable toggle\n  const handleWallpaperToggle = (enabled: boolean) => {\n    onSettingsChange({ wallpaperEnabled: enabled });\n  };\n\n  // Handle category selection with edge case handling\n  const handleCategoryToggle = (category: string, selected: boolean) => {\n    let updatedCategories: string[];\n    \n    if (selected) {\n      // Add category if not already present\n      updatedCategories = currentSettings.selectedCategories.includes(category)\n        ? currentSettings.selectedCategories\n        : [...currentSettings.selectedCategories, category];\n    } else {\n      // Remove category\n      updatedCategories = currentSettings.selectedCategories.filter(cat => cat !== category);\n    }\n    \n    onSettingsChange({ selectedCategories: updatedCategories });\n  };\n\n  // Check if no categories are selected\n  const hasNoCategories = currentSettings.selectedCategories.length === 0;\n\n  // Handle wallpaper size change\n  const handleWallpaperSizeChange = (size: WallpaperSize) => {\n    onSettingsChange({ wallpaperSize: size });\n  };\n\n  // Handle rotation interval change\n  const handleRotationIntervalChange = (interval: number) => {\n    onSettingsChange({ rotationInterval: interval });\n  };\n\n  // Handle time format change\n  const handleTimeFormatChange = (format: TimeFormat) => {\n    onSettingsChange({ timeFormat: format });\n  };\n\n  // Handle font color change\n  const handleFontColorChange = (color: FontColor) => {\n    onSettingsChange({ fontColor: color });\n  };\n\n  // Handle font family change\n  const handleFontFamilyChange = (family: FontFamily) => {\n    onSettingsChange({ fontFamily: family });\n  };\n\n  if (!isVisible) {\n    return null;\n  }\n\n  return (\n    <div className={`${CSS_CLASSES.SETTINGS_PANEL} ${CSS_CLASSES.SETTINGS_VISIBLE}`}>\n      <div className=\"settings-content\">\n        <div className=\"settings-header\">\n          <h2 className=\"settings-title\">Settings</h2>\n          <button \n            className=\"settings-close-button\"\n            onClick={() => {/* This will be handled by parent component */}}\n            aria-label=\"Close Settings\"\n          >\n            ✕\n          </button>\n        </div>\n        \n        {/* Display Mode Controls */}\n        <div className=\"settings-section\">\n          <h3 className=\"settings-section-title\">Display Mode</h3>\n          \n          <div className=\"settings-toggle-group\">\n            <label className=\"settings-toggle\">\n              <input\n                type=\"checkbox\"\n                checked={currentSettings.wallpaperEnabled}\n                onChange={(e) => handleWallpaperToggle(e.target.checked)}\n              />\n              <span className=\"settings-toggle-label\">Show Wallpapers</span>\n            </label>\n          </div>\n        </div>\n\n        {/* Digital Clock Settings Dropdown */}\n        <div className=\"settings-dropdown\">\n          <button \n            className={`settings-dropdown-header ${digitalClockExpanded ? 'expanded' : ''}`}\n            onClick={() => setDigitalClockExpanded(!digitalClockExpanded)}\n          >\n            <span>Digital Clock Settings</span>\n            <span className=\"dropdown-arrow\">{digitalClockExpanded ? '▼' : '▶'}</span>\n          </button>\n          \n          {digitalClockExpanded && (\n            <div className=\"settings-dropdown-content\">\n              {/* Time Format */}\n              <div className=\"settings-subsection\">\n                <h4 className=\"settings-subsection-title\">Time Format</h4>\n                <div className=\"settings-radio-group\">\n                  <label className=\"settings-radio\">\n                    <input\n                      type=\"radio\"\n                      name=\"timeFormat\"\n                      value=\"12h\"\n                      checked={currentSettings.timeFormat === '12h'}\n                      onChange={() => handleTimeFormatChange('12h')}\n                    />\n                    <span className=\"settings-radio-label\">12 Hour</span>\n                  </label>\n                  \n                  <label className=\"settings-radio\">\n                    <input\n                      type=\"radio\"\n                      name=\"timeFormat\"\n                      value=\"24h\"\n                      checked={currentSettings.timeFormat === '24h'}\n                      onChange={() => handleTimeFormatChange('24h')}\n                    />\n                    <span className=\"settings-radio-label\">24 Hour</span>\n                  </label>\n                </div>\n              </div>\n\n              {/* Font Color */}\n              <div className=\"settings-subsection\">\n                <h4 className=\"settings-subsection-title\">Font Color</h4>\n                <div className=\"settings-color-grid\">\n                  {FONT_COLORS.map(color => (\n                    <label key={color.value} className=\"settings-color-option\">\n                      <input\n                        type=\"radio\"\n                        name=\"fontColor\"\n                        value={color.value}\n                        checked={currentSettings.fontColor === color.value}\n                        onChange={() => handleFontColorChange(color.value)}\n                      />\n                      <span \n                        className=\"settings-color-swatch\"\n                        style={{ backgroundColor: color.value }}\n                        title={color.name}\n                      />\n                      <span className=\"settings-color-name\">{color.name}</span>\n                    </label>\n                  ))}\n                </div>\n              </div>\n\n              {/* Font Family */}\n              <div className=\"settings-subsection\">\n                <h4 className=\"settings-subsection-title\">Font Type</h4>\n                <select\n                  className=\"settings-select\"\n                  value={currentSettings.fontFamily}\n                  onChange={(e) => handleFontFamilyChange(e.target.value)}\n                >\n                  {FONT_FAMILIES.map(font => (\n                    <option key={font.value} value={font.value}>\n                      {font.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Wallpaper Settings Dropdown */}\n        {currentSettings.wallpaperEnabled && (\n          <div className=\"settings-dropdown\">\n            <button \n              className={`settings-dropdown-header ${wallpaperExpanded ? 'expanded' : ''}`}\n              onClick={() => setWallpaperExpanded(!wallpaperExpanded)}\n            >\n              <span>Wallpaper Settings</span>\n              <span className=\"dropdown-arrow\">{wallpaperExpanded ? '▼' : '▶'}</span>\n            </button>\n            \n            {wallpaperExpanded && (\n              <div className=\"settings-dropdown-content\">\n                {/* Wallpaper Size */}\n                <div className=\"settings-subsection\">\n                  <h4 className=\"settings-subsection-title\">Wallpaper Size</h4>\n                  <div className=\"settings-radio-group\">\n                    {(['normal', 'enlarged'] as WallpaperSize[]).map(size => (\n                      <label key={size} className=\"settings-radio\">\n                        <input\n                          type=\"radio\"\n                          name=\"wallpaperSize\"\n                          value={size}\n                          checked={currentSettings.wallpaperSize === size}\n                          onChange={() => handleWallpaperSizeChange(size)}\n                        />\n                        <span className=\"settings-radio-label\">\n                          {size.charAt(0).toUpperCase() + size.slice(1)}\n                        </span>\n                      </label>\n                    ))}\n                  </div>\n                </div>\n\n                {/* Rotation Speed */}\n                <div className=\"settings-subsection\">\n                  <h4 className=\"settings-subsection-title\">Rotation Speed</h4>\n                  <select\n                    className=\"settings-select\"\n                    value={currentSettings.rotationInterval}\n                    onChange={(e) => handleRotationIntervalChange(Number(e.target.value))}\n                  >\n                    {ROTATION_INTERVALS.map(interval => (\n                      <option key={interval.value} value={interval.value}>\n                        {interval.label}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                {/* Category Selection */}\n                <div className=\"settings-subsection\">\n                  <h4 className=\"settings-subsection-title\">Wallpaper Categories</h4>\n                  \n                  <div className=\"settings-category-grid\">\n                    {WALLPAPER_CATEGORIES.map(category => {\n                      const isSelected = currentSettings.selectedCategories.includes(category.name);\n                      const hasImages = category.imageCount > 0;\n                      const categoryClass = `settings-category ${\n                        isSelected ? 'category-selected' : 'category-unselected'\n                      } ${!hasImages ? 'category-empty' : ''}`;\n                      \n                      return (\n                        <label key={category.name} className={categoryClass}>\n                          <input\n                            type=\"checkbox\"\n                            checked={isSelected}\n                            onChange={(e) => handleCategoryToggle(category.name, e.target.checked)}\n                            aria-label={`Toggle ${getCategoryDisplayName(category.name)} wallpapers${!hasImages ? ' (no images available)' : ''}`}\n                            disabled={!hasImages}\n                          />\n                          <span className=\"settings-category-label\">\n                            {getCategoryDisplayName(category.name)}\n                            {hasImages && category.imageCount > 0 && (\n                              <span className=\"settings-category-count\">\n                                ({category.imageCount})\n                              </span>\n                            )}\n                            {!hasImages && (\n                              <span className=\"settings-category-empty-indicator\">\n                                (empty)\n                              </span>\n                            )}\n                          </span>\n                        </label>\n                      );\n                    })}\n                  </div>\n                  \n                  {/* Warning when no categories are selected */}\n                  {hasNoCategories && (\n                    <div className=\"settings-category-warning\">\n                      No categories selected. A black background will be displayed.\n                    </div>\n                  )}\n                  \n                  {/* Info about selected categories */}\n                  {currentSettings.selectedCategories.length > 0 && (\n                    <div className=\"settings-category-info\">\n                      {currentSettings.selectedCategories.length} categor{currentSettings.selectedCategories.length === 1 ? 'y' : 'ies'} selected\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}