{"ast":null,"code":"var _jsxFileName = \"/Users/chmanune/Project/Github_wall_paper_project/desktop-clock-app/src/components/Clock.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { formatTimeForDisplay, getCurrentISTTime } from '../utils/timeUtils';\nimport { TIME_UPDATE_INTERVAL, CSS_CLASSES } from '../utils/constants';\nimport '../styles/Clock.css';\n\n/**\n * Clock component that displays IST time in the specified two-line format\n * Line 1: \"HH:MM\" on left, \"AM/PM SS\" on right\n * Line 2: \"Day - Month Date\"\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Clock = ({\n  isFullScreen,\n  position,\n  timeFormat\n}) => {\n  _s();\n  const [currentTime, setCurrentTime] = useState(getCurrentISTTime());\n  const [clockDisplay, setClockDisplay] = useState(formatTimeForDisplay(getCurrentISTTime(), timeFormat));\n\n  // Update time display\n  const updateTime = useCallback(() => {\n    const newTime = getCurrentISTTime();\n    const newDisplay = formatTimeForDisplay(newTime, timeFormat);\n    setCurrentTime(newTime);\n    setClockDisplay(newDisplay);\n  }, [timeFormat]);\n\n  // Set up time update interval\n  useEffect(() => {\n    const interval = setInterval(updateTime, TIME_UPDATE_INTERVAL);\n\n    // Update immediately on mount\n    updateTime();\n    return () => clearInterval(interval);\n  }, [updateTime]);\n\n  // Update display when time format changes\n  useEffect(() => {\n    const newDisplay = formatTimeForDisplay(currentTime, timeFormat);\n    setClockDisplay(newDisplay);\n  }, [timeFormat, currentTime]);\n\n  // Determine CSS classes based on props\n  const getClockClasses = () => {\n    const baseClass = CSS_CLASSES.CLOCK_CONTAINER;\n    const positionClass = isFullScreen ? CSS_CLASSES.CLOCK_FULLSCREEN : CSS_CLASSES.CLOCK_BOTTOM_LEFT;\n    return `${baseClass} ${positionClass}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getClockClasses(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clock-time-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"clock-time-left\",\n        children: clockDisplay.timeLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"clock-time-right\",\n        children: clockDisplay.timeRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clock-date-line\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"clock-date\",\n        children: clockDisplay.dateBottom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Clock, \"2pMou12bHi+zaI7LKQb10MNSuw8=\");\n_c = Clock;\nexport default Clock;\nvar _c;\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","formatTimeForDisplay","getCurrentISTTime","TIME_UPDATE_INTERVAL","CSS_CLASSES","jsxDEV","_jsxDEV","Clock","isFullScreen","position","timeFormat","_s","currentTime","setCurrentTime","clockDisplay","setClockDisplay","updateTime","newTime","newDisplay","interval","setInterval","clearInterval","getClockClasses","baseClass","CLOCK_CONTAINER","positionClass","CLOCK_FULLSCREEN","CLOCK_BOTTOM_LEFT","className","children","timeLeft","fileName","_jsxFileName","lineNumber","columnNumber","timeRight","dateBottom","_c","$RefreshReg$"],"sources":["/Users/chmanune/Project/Github_wall_paper_project/desktop-clock-app/src/components/Clock.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { ClockProps, ClockDisplay } from '../types';\nimport { formatTimeForDisplay, getCurrentISTTime } from '../utils/timeUtils';\nimport { TIME_UPDATE_INTERVAL, CSS_CLASSES } from '../utils/constants';\nimport '../styles/Clock.css';\n\n/**\n * Clock component that displays IST time in the specified two-line format\n * Line 1: \"HH:MM\" on left, \"AM/PM SS\" on right\n * Line 2: \"Day - Month Date\"\n */\nconst Clock: React.FC<ClockProps> = ({ \n  isFullScreen, \n  position, \n  timeFormat \n}) => {\n  const [currentTime, setCurrentTime] = useState<Date>(getCurrentISTTime());\n  const [clockDisplay, setClockDisplay] = useState<ClockDisplay>(\n    formatTimeForDisplay(getCurrentISTTime(), timeFormat)\n  );\n\n  // Update time display\n  const updateTime = useCallback(() => {\n    const newTime = getCurrentISTTime();\n    const newDisplay = formatTimeForDisplay(newTime, timeFormat);\n    \n    setCurrentTime(newTime);\n    setClockDisplay(newDisplay);\n  }, [timeFormat]);\n\n  // Set up time update interval\n  useEffect(() => {\n    const interval = setInterval(updateTime, TIME_UPDATE_INTERVAL);\n    \n    // Update immediately on mount\n    updateTime();\n    \n    return () => clearInterval(interval);\n  }, [updateTime]);\n\n  // Update display when time format changes\n  useEffect(() => {\n    const newDisplay = formatTimeForDisplay(currentTime, timeFormat);\n    setClockDisplay(newDisplay);\n  }, [timeFormat, currentTime]);\n\n  // Determine CSS classes based on props\n  const getClockClasses = (): string => {\n    const baseClass = CSS_CLASSES.CLOCK_CONTAINER;\n    const positionClass = isFullScreen \n      ? CSS_CLASSES.CLOCK_FULLSCREEN \n      : CSS_CLASSES.CLOCK_BOTTOM_LEFT;\n    \n    return `${baseClass} ${positionClass}`;\n  };\n\n  return (\n    <div className={getClockClasses()}>\n      <div className=\"clock-time-line\">\n        <span className=\"clock-time-left\">{clockDisplay.timeLeft}</span>\n        <span className=\"clock-time-right\">{clockDisplay.timeRight}</span>\n      </div>\n      <div className=\"clock-date-line\">\n        <span className=\"clock-date\">{clockDisplay.dateBottom}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Clock;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}